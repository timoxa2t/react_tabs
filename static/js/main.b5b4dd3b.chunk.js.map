{"version":3,"sources":["components/TabLink/TabLink.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabLink","tab","isActive","onTabSelected","id","title","className","classNames","href","onClick","Tabs","tabs","find","getTabById","selectedTabId","content","map","App","useState","setSelectedTabId","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA2B,SAAC,GAMnC,IAJFC,EAIC,EAJDA,IACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,cAIAC,EAEEH,EAFFG,GACAC,EACEJ,EADFI,MASF,OACE,oBACEC,UAAWC,IAAW,CAAE,YAAaL,IACrC,UAAQ,MAFV,SAIE,mBACEM,KAAI,WAAMJ,GACV,UAAQ,UACRK,QAdiB,WAChBP,GACHC,EAAcF,IASd,SAKGI,OCxBF,IAAMK,EAAwB,SAAC,GAMhC,IAJFC,EAIC,EAJDA,KACAR,EAGC,EAHDA,cAIF,EAXF,SAAoBQ,EAAaP,GAC/B,OAAOO,EAAKC,MAAK,SAAAX,GAAG,OAAIA,EAAIG,KAAOA,MAAOO,EAAK,GAUvBE,CAAWF,EADhC,EAFDG,eAGMV,EAAR,EAAQA,GAAIW,EAAZ,EAAYA,QAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKT,UAAU,gBAAf,SACE,6BACGK,EAAKK,KAAI,SAAAf,GAAG,OACX,cAAC,EAAD,CAEEA,IAAKA,EACLC,SAAUD,EAAIG,KAAOA,EACrBD,cAAeA,GAHVF,EAAIG,WASjB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGS,QC/BIJ,EAAc,CACzB,CAAEP,GAAI,QAASC,MAAO,QAASU,QAAS,eACxC,CAAEX,GAAI,QAASC,MAAO,QAASU,QAAS,eACxC,CAAEX,GAAI,QAASC,MAAO,QAASU,QAAS,gBAOnC,IAAME,EAAgB,WAC3B,IALkBb,EAKlB,EAA0Cc,mBAASP,EAAK,GAAGP,IAA3D,mBAAOU,EAAP,KAAsBK,EAAtB,KAMMC,GAXYhB,EAWaU,EAVxBH,EAAKC,MAAK,SAAAX,GAAG,OAAIA,EAAIG,KAAOA,MAAOO,EAAK,IAY/C,OACE,sBAAKL,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBc,EAAYf,SAGlC,cAAC,EAAD,CACEM,KAAMA,EACNR,cAdgB,SAACF,GACrBkB,EAAiBlB,EAAIG,KAcjBU,cAAeA,QChCvBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b5b4dd3b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab,\n  isActive: boolean,\n  onTabSelected: (id: Tab) => void,\n};\n\nexport const TabLink: React.FC<Props> = (\n  {\n    tab,\n    isActive,\n    onTabSelected,\n  },\n) => {\n  const {\n    id,\n    title,\n  } = tab;\n\n  const handleTabClick = () => {\n    if (!isActive) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <li\n      className={classNames({ 'is-active': isActive })}\n      data-cy=\"Tab\"\n    >\n      <a\n        href={`#${id}`}\n        data-cy=\"TabLink\"\n        onClick={handleTabClick}\n      >\n        {title}\n      </a>\n    </li>\n  );\n};\n","import { Tab } from '../../types/Tab';\nimport { TabLink } from '../TabLink';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nfunction getTabById(tabs: Tab[], id: string): Tab {\n  return tabs.find(tab => tab.id === id) || tabs[0];\n}\n\nexport const Tabs: React.FC<Props> = (\n  {\n    tabs,\n    onTabSelected,\n    selectedTabId,\n  },\n) => {\n  const { id, content } = getTabById(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <TabLink\n              key={tab.id}\n              tab={tab}\n              isActive={tab.id === id}\n              onTabSelected={onTabSelected}\n            />\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nfunction getTabById(id: string): Tab {\n  return tabs.find(tab => tab.id === id) || tabs[0];\n}\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const selectedTab = getTabById(selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabId={selectedTabId}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}